package letsric.randomkeybinds;

import com.mojang.brigadier.CommandDispatcher;
import net.minecraft.client.MinecraftClient;
import net.minecraft.client.util.InputUtil;
import net.minecraft.server.command.CommandManager;
import net.minecraft.server.command.ServerCommandSource;
import net.minecraft.text.LiteralText;
import net.minecraft.util.Util;
import org.lwjgl.glfw.GLFW;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

public class commands {
    private List<Integer> keys = new ArrayList<>(100);

    public static InputUtil.Key ramdomkeybinding(commands commandsObject) {
        int len = commandsObject.keys.size();
        Random rand = new Random(System.currentTimeMillis());
        int randnum = rand.nextInt(len);
        int keycode = commandsObject.keys.get(randnum);
        InputUtil.Key key = InputUtil.fromKeyCode(keycode, keycode);
        commandsObject.keys.remove(randnum);
        return key;
    }

    public static void registerCommands(CommandDispatcher<ServerCommandSource> dispatcher, boolean dedicated) {
        dispatcher.register(CommandManager.literal("randomizeKeybinds").executes(context -> {
            ServerCommandSource source = context.getSource();

            commands commandsObject = new commands();

            commandsObject.keys.add(GLFW.GLFW_KEY_SPACE);
            commandsObject.keys.add(GLFW.GLFW_KEY_APOSTROPHE);
            commandsObject.keys.add(GLFW.GLFW_KEY_COMMA);
            commandsObject.keys.add(GLFW.GLFW_KEY_MINUS);
            commandsObject.keys.add(GLFW.GLFW_KEY_PERIOD);
            commandsObject.keys.add(GLFW.GLFW_KEY_SLASH);
            commandsObject.keys.add(GLFW.GLFW_KEY_0);
            commandsObject.keys.add(GLFW.GLFW_KEY_1);
            commandsObject.keys.add(GLFW.GLFW_KEY_2);
            commandsObject.keys.add(GLFW.GLFW_KEY_3);
            commandsObject.keys.add(GLFW.GLFW_KEY_4);
            commandsObject.keys.add(GLFW.GLFW_KEY_5);
            commandsObject.keys.add(GLFW.GLFW_KEY_6);
            commandsObject.keys.add(GLFW.GLFW_KEY_7);
            commandsObject.keys.add(GLFW.GLFW_KEY_8);
            commandsObject.keys.add(GLFW.GLFW_KEY_9);
            commandsObject.keys.add(GLFW.GLFW_KEY_SEMICOLON);
            commandsObject.keys.add(GLFW.GLFW_KEY_EQUAL);
            commandsObject.keys.add(GLFW.GLFW_KEY_A);
            commandsObject.keys.add(GLFW.GLFW_KEY_B);
            commandsObject.keys.add(GLFW.GLFW_KEY_C);
            commandsObject.keys.add(GLFW.GLFW_KEY_D);
            commandsObject.keys.add(GLFW.GLFW_KEY_E);
            commandsObject.keys.add(GLFW.GLFW_KEY_F);
            commandsObject.keys.add(GLFW.GLFW_KEY_G);
            commandsObject.keys.add(GLFW.GLFW_KEY_H);
            commandsObject.keys.add(GLFW.GLFW_KEY_I);
            commandsObject.keys.add(GLFW.GLFW_KEY_J);
            commandsObject.keys.add(GLFW.GLFW_KEY_K);
            commandsObject.keys.add(GLFW.GLFW_KEY_L);
            commandsObject.keys.add(GLFW.GLFW_KEY_M);
            commandsObject.keys.add(GLFW.GLFW_KEY_N);
            commandsObject.keys.add(GLFW.GLFW_KEY_O);
            commandsObject.keys.add(GLFW.GLFW_KEY_P);
            commandsObject.keys.add(GLFW.GLFW_KEY_Q);
            commandsObject.keys.add(GLFW.GLFW_KEY_R);
            commandsObject.keys.add(GLFW.GLFW_KEY_S);
            commandsObject.keys.add(GLFW.GLFW_KEY_T);
            commandsObject.keys.add(GLFW.GLFW_KEY_U);
            commandsObject.keys.add(GLFW.GLFW_KEY_V);
            commandsObject.keys.add(GLFW.GLFW_KEY_W);
            commandsObject.keys.add(GLFW.GLFW_KEY_X);
            commandsObject.keys.add(GLFW.GLFW_KEY_Y);
            commandsObject.keys.add(GLFW.GLFW_KEY_Z);
            commandsObject.keys.add(GLFW.GLFW_KEY_LEFT_BRACKET);
            commandsObject.keys.add(GLFW.GLFW_KEY_BACKSLASH);
            commandsObject.keys.add(GLFW.GLFW_KEY_RIGHT_BRACKET);
            commandsObject.keys.add(GLFW.GLFW_KEY_GRAVE_ACCENT);
            commandsObject.keys.add(GLFW.GLFW_KEY_ENTER);
            commandsObject.keys.add(GLFW.GLFW_KEY_TAB);
            commandsObject.keys.add(GLFW.GLFW_KEY_BACKSPACE);
            commandsObject.keys.add(GLFW.GLFW_KEY_INSERT);
            commandsObject.keys.add(GLFW.GLFW_KEY_DELETE);
            commandsObject.keys.add(GLFW.GLFW_KEY_RIGHT);
            commandsObject.keys.add(GLFW.GLFW_KEY_LEFT);
            commandsObject.keys.add(GLFW.GLFW_KEY_DOWN);
            commandsObject.keys.add(GLFW.GLFW_KEY_UP);
            commandsObject.keys.add(GLFW.GLFW_KEY_PAGE_UP);
            commandsObject.keys.add(GLFW.GLFW_KEY_PAGE_DOWN);
            commandsObject.keys.add(GLFW.GLFW_KEY_HOME);
            commandsObject.keys.add(GLFW.GLFW_KEY_END);
            commandsObject.keys.add(GLFW.GLFW_KEY_F1);
            commandsObject.keys.add(GLFW.GLFW_KEY_F2);
            commandsObject.keys.add(GLFW.GLFW_KEY_F3);
            commandsObject.keys.add(GLFW.GLFW_KEY_F4);
            commandsObject.keys.add(GLFW.GLFW_KEY_F5);
            commandsObject.keys.add(GLFW.GLFW_KEY_F6);
            commandsObject.keys.add(GLFW.GLFW_KEY_F7);
            commandsObject.keys.add(GLFW.GLFW_KEY_F8);
            commandsObject.keys.add(GLFW.GLFW_KEY_F9);
            commandsObject.keys.add(GLFW.GLFW_KEY_F10);
            commandsObject.keys.add(GLFW.GLFW_KEY_F11);
            commandsObject.keys.add(GLFW.GLFW_KEY_F12);
            commandsObject.keys.add(GLFW.GLFW_KEY_KP_0);
            commandsObject.keys.add(GLFW.GLFW_KEY_KP_1);
            commandsObject.keys.add(GLFW.GLFW_KEY_KP_2);
            commandsObject.keys.add(GLFW.GLFW_KEY_KP_3);
            commandsObject.keys.add(GLFW.GLFW_KEY_KP_4);
            commandsObject.keys.add(GLFW.GLFW_KEY_KP_5);
            commandsObject.keys.add(GLFW.GLFW_KEY_KP_6);
            commandsObject.keys.add(GLFW.GLFW_KEY_KP_7);
            commandsObject.keys.add(GLFW.GLFW_KEY_KP_8);
            commandsObject.keys.add(GLFW.GLFW_KEY_KP_9);
            commandsObject.keys.add(GLFW.GLFW_KEY_KP_DIVIDE);
            commandsObject.keys.add(GLFW.GLFW_KEY_KP_MULTIPLY);
            commandsObject.keys.add(GLFW.GLFW_KEY_KP_SUBTRACT);
            commandsObject.keys.add(GLFW.GLFW_KEY_KP_ADD);
            commandsObject.keys.add(GLFW.GLFW_KEY_KP_ENTER);
            commandsObject.keys.add(GLFW.GLFW_KEY_LEFT_SHIFT);
            commandsObject.keys.add(GLFW.GLFW_KEY_LEFT_CONTROL);
            commandsObject.keys.add(GLFW.GLFW_KEY_LEFT_ALT);
            commandsObject.keys.add(GLFW.GLFW_KEY_RIGHT_SHIFT);
            commandsObject.keys.add(GLFW.GLFW_KEY_RIGHT_CONTROL);
            commandsObject.keys.add(GLFW.GLFW_KEY_RIGHT_ALT);

            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keyForward, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keyLeft, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keyBack, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keyRight, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keyJump, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keySneak, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keySprint, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keyInventory, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keySwapHands, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keyDrop, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keyUse, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keyAttack, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keyPickItem, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keyChat, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keyPlayerList, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keyCommand, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keySocialInteractions, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keyScreenshot, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keyTogglePerspective, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keySmoothCamera, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keyFullscreen, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keySpectatorOutlines, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keyAdvancements, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keysHotbar[0], ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keysHotbar[1], ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keysHotbar[2], ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keysHotbar[3], ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keysHotbar[4], ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keysHotbar[5], ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keysHotbar[6], ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keysHotbar[7], ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keysHotbar[8], ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keySaveToolbarActivator, ramdomkeybinding(commandsObject));
            MinecraftClient.getInstance().options.setKeyCode(MinecraftClient.getInstance().options.keyLoadToolbarActivator, ramdomkeybinding(commandsObject));

            MinecraftClient.getInstance().options.load();
            source.getEntity().sendSystemMessage(new LiteralText("---------------------------\n§aKeybindings wueden generiert!\nSpeichere dir die options.txt\nDatei im Minecraft ordner ab,\num die Keybinds später wieder\nzu laden. Tutorial: TODO\n§f---------------------------"), Util.NIL_UUID);
            return 1;
        }));
    }
}
